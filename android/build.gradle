buildscript {
  // Buildscript is evaluated before everything else so we can't use getExtOrDefault
  def kotlin_version = rootProject.ext.has("kotlinVersion") ? rootProject.ext.get("kotlinVersion") : project.properties["Rssdk_kotlinVersion"]

  repositories {
    google()
    mavenCentral()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:7.2.1"
  }
}

def reactNativeArchitectures() {
  def value = rootProject.getProperties().get("reactNativeArchitectures")
  return value ? value.split(",") : ["armeabi-v7a", "arm64-v8a"]
}

def isNewArchitectureEnabled() {
  return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

apply plugin: "com.android.library"

// !!
def appProject = rootProject.allprojects.find { it.plugins.hasPlugin('com.android.application') }

if (isNewArchitectureEnabled()) {
  apply plugin: "com.facebook.react"
}

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties["Rssdk_" + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["Rssdk_" + name]).toInteger()
}

def supportsNamespace() {
  def parsed = com.android.Version.ANDROID_GRADLE_PLUGIN_VERSION.tokenize('.')
  def major = parsed[0].toInteger()
  def minor = parsed[1].toInteger()

  // Namespace support was added in 7.3.0
  return (major == 7 && minor >= 3) || major >= 8
}

android {
  if (supportsNamespace()) {
    namespace "com.rssdk"

    sourceSets {
      main {
        manifest.srcFile "src/main/AndroidManifestNew.xml"
      }
    }
  }

  ndkVersion getExtOrDefault("ndkVersion")
  compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")

  defaultConfig {
    minSdkVersion getExtOrIntegerDefault("minSdkVersion")
    targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")

    ndk {
      abiFilters "armeabi-v7a", "arm64-v8a"
    }

    externalNativeBuild {
      cmake {
        cppFlags "-O2 -frtti -fexceptions -Wall -fstack-protector-all -std=c++11"
        arguments "-DANDROID_STL=c++_shared"
        abiFilters 'armeabi-v7a', 'arm64-v8a'
      }
    }
  }

  externalNativeBuild {
    cmake {
      version "3.22.1"
      path "src/main/cpp/Android/CMakeLists.txt"
    }
  }

  packagingOptions {
    pickFirst 'lib/*/libc++_shared.so'
  }

  sourceSets {
    main {
      jniLibs.srcDirs = ['libs']
    }
  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }

  lintOptions {
    disable "GradleCompatible"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

repositories {
  mavenCentral()
  google()
}

def kotlin_version = getExtOrDefault("kotlinVersion")

dependencies {
  implementation files('libs/Network-release.aar')
  implementation files('libs/bccrypto-release.aar')

  // implementation fileTree(dir: "libs", include: ["*.jar"])
  // https://github.com/LiliaRud/react-native-tuya/tree/master
  implementation fileTree(dir: "libs", include: ["*.jar", "*.aar"])

  // For < 0.71, this will be from the local maven repo
  // For > 0.71, this will be replaced by `com.facebook.react:react-android:$version` by react gradle plugin
  implementation "com.facebook.react:react-native:+"

  implementation 'io.reactivex.rxjava2:rxjava:2.2.19'
  implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

  // https://github.com/LiliaRud/react-native-tuya/tree/master
  implementation 'com.alibaba:fastjson:1.1.67.android'
  implementation 'com.squareup.okhttp3:okhttp-urlconnection:3.14.9'
  // The latest stable App SDK for Android.
  implementation 'com.facebook.soloader:soloader:0.10.4'

  implementation 'io.reactivex.rxjava2:rxjava:2.2.19'
  implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

  implementation 'com.squareup.retrofit2:retrofit:2.9.0'
  implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
  implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
  implementation 'com.squareup.okhttp3:logging-interceptor:3.8.1'
  implementation "com.blankj:utilcodex:1.30.6"
}

// !!
if (isNewArchitectureEnabled()) {
  apply plugin: "com.facebook.react"

  react {
    jsRootDir = file("../src/")
    libraryName = "Rssdk"
    codegenJavaPackageName = "com.rssdk"
  }
}

